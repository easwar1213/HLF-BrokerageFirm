/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample access control list.
 */
rule BrokerageFirmReadUpdateThemselves {
    description: "Allow Brokerage Firm Read and Update Themselves"
    participant(p): "org.example.brokeragefirmnetwork.BrokerageFirms"
    operation: READ,UPDATE
    resource(r): "org.example.brokeragefirmnetwork.BrokerageFirms"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule BrokerageFirmCreateReadUpdateDelLicenseBrokers {
    description: "Allow Brokerage Firm Create,Read,Update and Delete License Brokers"
    participant(p): "org.example.brokeragefirmnetwork.BrokerageFirms"
    operation: ALL
    resource(r): "org.example.brokeragefirmnetwork.LicenseBrokers"
    condition: (r.brokerageId == p.brokerageId)
    action: ALLOW
}

rule BrokerageFirmCreateReadUpdateDelEmployeers {
    description: "Allow Brokerage Firm Create,Read,Update and Delete Employeers"
    participant(p): "org.example.brokeragefirmnetwork.BrokerageFirms"
    operation: ALL
    resource(r): "org.example.brokeragefirmnetwork.Employeers"
    condition: (r.brokerageId == p.brokerageId)
    action: ALLOW
}

rule BrokerageFirmCreateReadUpdateDelOpportunityWON {
    description: "Allow Brokerage Firm Create,Read,Update andf Delete OpportunityWON asset"
    participant: "org.example.brokeragefirmnetwork.BrokerageFirms"
    operation: ALL
    resource: "org.example.brokeragefirmnetwork.OpportunityWon"    
    action: ALLOW
}

rule BrokerageFirmCreateLead {
    description: "Allow Brokerage Firm Create Lead"
    participant(p): "org.example.brokeragefirmnetwork.BrokerageFirms"
    operation: ALL
    resource(r): "org.example.brokeragefirmnetwork.CreateLead"
    condition: (r.brokerageId == p.brokerageId)
    action: ALLOW
}

rule BrokerageFirmOppurtunity {
    description: "Allow Brokerage Firm Update Opportunity"
    participant(p): "org.example.brokeragefirmnetwork.BrokerageFirms"
    operation: ALL
    resource(r): "org.example.brokeragefirmnetwork.Opportunity"
    condition: (r.brokerageId == p.brokerageId)
    action: ALLOW
}

rule BrokerageFirmOpportunityWIP {
    description: "Allow Brokerage Firm Update Oppurtunity WIP"
    participant(p): "org.example.brokeragefirmnetwork.BrokerageFirms"
    operation: ALL
    resource(r): "org.example.brokeragefirmnetwork.OpportunityWIP"
    condition: (r.brokerageId == p.brokerageId)
    action: ALLOW
}

rule BrokerageFirmWon {
    description: "Allow Brokerage Firm Update WON"
    participant(p): "org.example.brokeragefirmnetwork.BrokerageFirms"
    operation: ALL
    resource(r): "org.example.brokeragefirmnetwork.Won"
    condition: (r.brokerageId == p.brokerageId)
    action: ALLOW
}

rule BrokerageFirmClosure {
    description: "Allow Brokerage Firm Update Closure"
    participant(p): "org.example.brokeragefirmnetwork.BrokerageFirms"
    operation: ALL
    resource(r): "org.example.brokeragefirmnetwork.Closure"
    condition: (r.brokerageId == p.brokerageId)
    action: ALLOW
}

rule LicenseBrokersReadUpdateThemselves {
    description: "Allow License Brokers Read and Update Themselves"
    participant(p): "org.example.brokeragefirmnetwork.LicenseBrokers"
    operation: READ,UPDATE
    resource(r): "org.example.brokeragefirmnetwork.LicenseBrokers"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule LicenseBrokersUpdateOppurtunity {
    description: "Allow License Brokers Update Opportunity"
    participant(p): "org.example.brokeragefirmnetwork.LicenseBrokers"
    operation: ALL
    resource(r): "org.example.brokeragefirmnetwork.Opportunity"
    condition: (r.brokerId == p.brokerId)
    action: ALLOW
}

rule LicenseBrokersUpdateOpportunityWIP {
    description: "Allow License Brokers Update Oppurtunity WIP"
    participant(p): "org.example.brokeragefirmnetwork.LicenseBrokers"
    operation: ALL
    resource(r): "org.example.brokeragefirmnetwork.OpportunityWIP"
    condition: (r.brokerId == p.brokerId)
    action: ALLOW
}

rule LicenseBrokersUpdateWon {
    description: "Allow License Brokers Update WON"
    participant(p): "org.example.brokeragefirmnetwork.LicenseBrokers"
    operation: ALL
    resource(r): "org.example.brokeragefirmnetwork.Won"
    condition: (r.brokerId == p.brokerId)
    action: ALLOW
}

rule EmployeersReadUpdateThemselves {
    description: "Allow Employeers Read and Update Themselves"
    participant(p): "org.example.brokeragefirmnetwork.Employeers"
    operation: READ,UPDATE
    resource(r): "org.example.brokeragefirmnetwork.Employeers"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

